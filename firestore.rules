
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Profiles can be read and updated only by the owner
    match /profiles/{userId} {
      allow read, update, write: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated();
    }

    // Transactions can be created by any authenticated user, but only read by the owner
    match /transactions/{transactionId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && isOwner(resource.data.user_id);
    }
    
    // Publicly readable collections for any authenticated user
    match /credit_packs/{packId} {
      allow read: if isAuthenticated();
      allow write: if false; // Disallow client-side writes
    }

    match /mentors/{mentorId} {
      allow read: if isAuthenticated();
      allow write: if false; // Disallow client-side writes
    }

    match /learning_modules/{moduleId} {
      allow read: if isAuthenticated();
      allow write: if false; // Disallow client-side writes
    }

    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      // Allow create/update for authenticated users (will be refined later)
      allow write: if isAuthenticated();
    }
    
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if false; // Disallow client-side writes
    }
  }
}
